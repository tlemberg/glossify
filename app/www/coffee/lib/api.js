// Generated by CoffeeScript 1.9.1
(function() {
  define(['utils', 'storage'], function(utils, storage) {
    var _addLanguage, _authenticateUser, _createUser, _ensureDictionary, _fetchDictionary, _updateUserProfile;
    _createUser = function(email, password, handler) {
      return $.ajax({
        url: "http://52.10.65.123:5000/api/create-user",
        method: "POST",
        data: {
          email: email,
          password: password
        },
        dataType: 'json',
        success: function(json) {
          return handler(json);
        }
      });
    };
    _authenticateUser = function(email, password, handler) {
      return $.ajax({
        url: "http://52.10.65.123:5000/api/authenticate-user",
        method: "POST",
        data: {
          email: email,
          password: password
        },
        dataType: 'json',
        success: function(json) {
          if (json['success']) {
            storage.setAccessToken(json['result']['token']);
            storage.setUserProfile(json['result']['userProfile']);
          }
          return handler(json);
        }
      });
    };
    _fetchDictionary = function(lang, handler) {
      var token;
      token = storage.getAccessToken();
      return $.ajax({
        url: "http://52.10.65.123:5000/api/get-dictionary/" + lang + "?auth_token=" + token,
        dataType: 'json',
        success: function(json) {
          var dictionary;
          if (json['success'] === 1) {
            dictionary = json['result'];
            storage.setDictionary(lang, dictionary);
          }
          return handler(json);
        }
      });
    };
    _ensureDictionary = function(lang, handler) {
      var dictionary;
      dictionary = storage.getDictionary(lang);
      if (dictionary != null) {
        return handler({
          success: 1,
          result: dictionary
        });
      } else {
        return fetchDictionary(lang, handler);
      }
    };
    _updateUserProfile = function(handler) {
      var email, token, userProfile;
      userProfile = storage.getUserProfile();
      email = userProfile['email'];
      token = storage.getAccessToken();
      return $.ajax({
        url: "http://52.10.65.123:5000/api/update-progress/" + email + "?auth_token=" + token,
        method: 'post',
        data: {
          cards: cards
        },
        dataType: 'json',
        success: function(json) {
          var dictionary;
          if (json['success'] === 1) {
            dictionary = json['result'];
          }
          return handler(json);
        }
      });
    };
    _addLanguage = function(lang, handler) {
      var email, token;
      email = storage.getUserProfile()['email'];
      token = storage.getAccessToken();
      return $.ajax({
        url: "http://52.10.65.123:5000/api/add-language/" + email + "/" + lang + "?auth_token=" + token,
        dataType: 'json',
        success: function(json) {
          return handler(json);
        }
      });
    };
    return {
      createUser: function(email, password, handler) {
        return _createUser(email, password, handler);
      },
      authenticateUser: function(email, password, handler) {
        return _authenticateUser(email, password, handler);
      },
      addLanguage: function(lang, handler) {
        return _addLanguage(lang, handler);
      },
      fetchDictionary: function(lang, handler) {
        return _fetchDictionary(lang, handler);
      },
      ensureDictionary: function(lang, handler) {
        return _ensureDictionary(lang, handler);
      },
      updateUserProfile: function(handler) {
        return _updateUserProfile(handler);
      },
      apiSummary: function() {
        return {
          'createUser': {
            func: this.createUser,
            params: ['email', 'password']
          },
          'authenticateUser': {
            func: this.authenticateUser,
            params: ['email', 'password']
          },
          'addLanguage': {
            func: this.addLanguage,
            params: ['lang']
          },
          'fetchDictionary': {
            func: this.fetchDictionary,
            params: ['lang']
          },
          'updateUserProfile': {
            func: this.updateUserProfile,
            params: []
          }
        };
      }
    };
  });

}).call(this);
