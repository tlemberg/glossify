// Generated by CoffeeScript 1.9.2
(function() {
  var indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  define(['storage', 'api', 'strings'], function(storage, api, strings) {
    var _loadPage, _nav, _refreshPage, _template, _validLangs;
    _nav = void 0;
    _validLangs = ['fr', 'es', 'ru', 'he', 'zh', 'is', 'sw'];
    _template = void 0;
    _loadPage = function(template) {
      var code, constants, langs, options, templateArgs, userProfile;
      _template = template;
      userProfile = storage.getUserProfile();
      constants = require('constants');
      langs = (function() {
        var i, len, ref, results;
        ref = userProfile.langs;
        results = [];
        for (i = 0, len = ref.length; i < len; i++) {
          code = ref[i];
          results.push({
            'code': code,
            'name': constants.langMap[code]
          });
        }
        return results;
      })();
      options = (function() {
        var i, len, results;
        results = [];
        for (i = 0, len = _validLangs.length; i < len; i++) {
          code = _validLangs[i];
          if (indexOf.call(userProfile.langs, code) < 0) {
            results.push({
              'code': code,
              'name': constants.langMap[code]
            });
          }
        }
        return results;
      })();
      templateArgs = {
        langs: langs,
        options: options
      };
      $(".manage-page").html(template(templateArgs));
      $('.manage-page .box').click(function(event) {
        var langCode;
        langCode = $(this).data('lang-code');
        storage.setLanguage(langCode);
        return api.ensureDictionary(langCode, function(json) {
          if (json['success']) {
            return api.getProgress(function(json) {
              if (json['success']) {
                return api.ensurePlan(function(json) {
                  if (json['success']) {
                    storage.setSection(1);
                    return _nav.loadPage('overview');
                  } else {
                    return $('.login-page .error').html(strings.getString('unexpectedFailure'));
                  }
                });
              } else {
                return $('.login-page .error').html(strings.getString('unexpectedFailure'));
              }
            });
          } else {
            return $('.login-page .error').html(strings.getString('unexpectedFailure'));
          }
        });
      });
      _nav.showBackBtn("Logout", function(event) {
        storage.logout();
        return _nav.loadPage('login');
      });
      return $('.manage-page .add-language-btn').click(function(event) {
        var langCode;
        langCode = $('.manage-page .add-language-select').val();
        return api.addLanguage(langCode, function(json) {
          if (json['success']) {
            _loadPage(_template);
            return _nav.showAlert('Language added!');
          } else {
            return _nav.showAlert('Failed to add language. Try again.');
          }
        });
      });
    };
    _refreshPage = function() {
      return console.log("refresh");
    };
    return {
      loadPage: function(template) {
        _nav = require('nav');
        return _loadPage(template);
      },
      refreshPage: function() {
        return _refreshPage();
      }
    };
  });

}).call(this);
