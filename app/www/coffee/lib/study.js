// Generated by CoffeeScript 1.9.1
(function() {
  define(['utils', 'stack', 'storage', 'nav', 'deck', 'css', 'page'], function(utils, stack, storage, nav, deck, css, page) {
    var BG_COLORS, _card, _deck, _getTxSummary, _hideFlipButton, _isFlipped, _loadPage, _nav, _preloadPage, _refreshContentPane, _refreshPage, _setBottomText, _setHeaderCss, _setProgressCounter, _setStudyFooterCss, _setStudyFooterHtml, _setTopText, _showFlipButton;
    _nav = void 0;
    _isFlipped = false;
    _card = void 0;
    _deck = void 0;
    BG_COLORS = ['#333333', '#ff0000', '#ff9900', '#009933', '#6600cc', '#0066ff'];
    _preloadPage = function() {
      _setStudyFooterHtml();
      $('.study-btn').click(function(event) {
        _card['progress'] = $(this).data('progress');
        deck.updateCard(_deck, _card);
        _card = deck.drawCard(_deck);
        return _refreshPage();
      });
      $('#study-flip-button').click(function(event) {
        _isFlipped = true;
        return _refreshPage();
      });
      return $('#study-back-btn').click(function(event) {
        var box, cards, lang, section;
        section = storage.getSection();
        box = storage.getBox();
        lang = storage.getLanguage();
        cards = stack.getCards(section, box, lang);
        deck.updateCards(_deck);
        return _nav.loadPage('overview');
      });
    };
    _refreshPage = function() {
      var txSummary;
      _setStudyFooterCss();
      _setHeaderCss();
      _refreshContentPane();
      _setProgressCounter();
      $('.study-footer').css('height', page.getFooterHeight());
      $('.study-content').css('border-color', BG_COLORS[_card['progress']]);
      _setTopText(_card['phrase']['base']);
      if (!_isFlipped) {
        return _showFlipButton();
      } else {
        txSummary = _getTxSummary(_card['phrase']['txs']);
        _setBottomText(txSummary);
        return _hideFlipButton();
      }
    };
    _loadPage = function() {
      var box, cards, dictionary, lang, maxIndex, minIndex, section, userProfile;
      userProfile = storage.getUserProfile();
      lang = storage.getLanguage();
      section = storage.getSection();
      box = storage.getBox();
      dictionary = storage.getDictionary(lang);
      minIndex = minIndex = (section - 1) * deck.boxSize() + box * deck.boxSize();
      maxIndex = minIndex + deck.boxSize();
      cards = userProfile['langs'][lang].slice(minIndex, maxIndex);
      _deck = deck.createDeck(cards, dictionary);
      _card = deck.drawCard(_deck);
      return _isFlipped = false;
    };
    _setProgressCounter = function() {
      var bin, card, j, len, maxProgress, percentProgress, ref, totalProgress;
      maxProgress = 5 * _deck['cards'].length;
      totalProgress = 0;
      ref = _deck['cards'];
      for (j = 0, len = ref.length; j < len; j++) {
        card = ref[j];
        totalProgress += card['progress'];
      }
      percentProgress = Math.floor(totalProgress / maxProgress * 100);
      $('#study-progress-counter').html(percentProgress + "%");
      bin = Math.floor(percentProgress / 25) + 1;
      return $('#study-progress-counter').css('background-color', BG_COLORS[bin]);
    };
    _setTopText = function(text) {
      return $('#study-top-text').html(text);
    };
    _setBottomText = function(text) {
      return $('#study-bottom-text').html(text);
    };
    _showFlipButton = function() {
      $('#study-flip-btn-container').show();
      $('#study-bottom-text').hide();
      return $('#study-btn-container').hide();
    };
    _hideFlipButton = function() {
      $('#study-flip-btn-container').hide();
      $('#study-bottom-text').show();
      return $('#study-btn-container').show();
    };
    _getTxSummary = function(txs) {
      var def, defTexts, i, k, lines, results, s, v;
      s = '';
      results = [];
      for (k in txs) {
        v = txs[k];
        defTexts = (function() {
          var j, len, results1;
          results1 = [];
          for (j = 0, len = v.length; j < len; j++) {
            def = v[j];
            if (!def['deleted']) {
              results1.push(def['text']);
            }
          }
          return results1;
        })();
        lines = (function() {
          var j, ref, results1;
          results1 = [];
          for (i = j = 0, ref = defTexts.length - 1; 0 <= ref ? j <= ref : j >= ref; i = 0 <= ref ? ++j : --j) {
            results1.push((i + 1) + ". " + defTexts[i]);
          }
          return results1;
        })();
        results.push(s = s + ("<b>" + k + "</b>") + "<br />" + lines.join("<br />"));
      }
      return results;
    };
    _setStudyFooterHtml = function() {
      var c, footerHtml, j, results;
      footerHtml = ((function() {
        var j, results;
        results = [];
        for (c = j = 1; j <= 5; c = ++j) {
          results.push("<div id='study-btn-" + c + "' class='study-btn' data-progress=" + c + ">\n	<div class='study-btn-text'>" + c + "</div>\n</div>");
        }
        return results;
      })()).join("\n");
      $('#study-btn-container').html(footerHtml);
      results = [];
      for (c = j = 1; j <= 5; c = ++j) {
        results.push((function(c) {
          return $("#study-btn-" + c).css('background-color', BG_COLORS[c]);
        })(c));
      }
      return results;
    };
    _setHeaderCss = function() {
      return $('#study-header').css('height', utils.withUnit(css.getStaticCss('study', 'header', 'height')));
    };
    _setStudyFooterCss = function() {
      var btnWidth;
      btnWidth = page.getFooterHeight();
      $('.study-btn').css('width', btnWidth);
      return $('.study-btn').css('height', btnWidth);
    };
    _refreshContentPane = function() {
      var borderWidth, contentHeight, contentMargin, headerHeight;
      headerHeight = utils.stripNumeric(css.getStaticCss('study', 'header', 'height'));
      contentMargin = utils.stripNumeric(css.getStaticCss('study', 'container', 'padding'));
      borderWidth = utils.stripNumeric(css.getStaticCss('study', 'content', 'border-width'));
      contentHeight = utils.appHeight() - page.getFooterHeight() - contentMargin * 2 - headerHeight;
      return $('#study-container').css('height', contentHeight);
    };
    return {
      preloadPage: function() {
        _nav = require('nav');
        return _preloadPage();
      },
      refreshPage: function() {
        return _refreshPage();
      },
      loadPage: function(params) {
        return _loadPage(params);
      }
    };
  });

}).call(this);
